# Pipeline to build a Databricks workspace with a basic setup:
# - deploys the Azure Infrastructure and the Databricks workspace using ARM templates
# - creates a Service Principal and adds its details to an Azure Key Vault and Databricks Workspace
# - prepares the Databricks Workspace (deploys Notebooks, creates Secret Scope, mounts ADLS)
# - runs a Databricks Notebook from a Data Factory Pipeline
#

trigger:
- none


parameters:
  - name: azureSubscription
    displayName: 'Service connection name'
    type: string

  - name: vmImage
    displayName: 'Pool Image'
    default: 'ubuntu-latest'
    values:
    - ubuntu-latest
    - ubuntu-18.04
    - ubuntu-16.04

  - name: adbResourceGroup
    displayName: 'Azure Databricks Resource Group Name'
    type: string
    default: 'databricks-workspace-rg'

  - name: azureLocation
    displayName: 'Azure Location for all resources'
    type: string
    default: 'West Europe'

  - name: adbWorkspaceName
    displayName: 'Azure Databricks Workspace Name'
    type: string
    default: 'databricks-workspace'

  - name: adbPricingTier
    displayName: 'Azure Databricks Pricing Tier'
    type: string
    default: 'premium'
    values:
    - premium
    - standard
    - trial

  - name: storageAccountName
    displayName: 'Azure Storage Account Name'
    type: string
    default: 'databricksadlsunique123'

  - name: storageContainerName
    displayName: 'Azure Storage Container Name'
    type: string
    default: 'default'

  - name: keyVaultName
    displayName: 'Azure Key Vault Name'
    type: string
    default: 'databricks-akv'

  - name: dataFactoryName
    displayName: 'Azure Data Factory Name'
    type: string
    default: 'databricks-adf-unique123'

  - name: dataFactoryPipelineName
    displayName: 'Azure Data Factory Pipeline Name'
    type: string
    default: 'databricks-pipeline'

  - name: spRegistrationName
    displayName: 'Service Principal App Registration Name'
    type: string
    default: 'databricks-sp-nonadmin'

  - name: adbSecretScope
    displayName: 'Databricks Secret Scope Name'
    type: string
    default: 'databricks-secret-scope'

  - name: adbNotebooksSourceLocation
    displayName: 'Location of Notebooks to be deployed'
    type: string
    default: '$(System.DefaultWorkingDirectory)/notebooks'

  - name: adbNotebooksWorkspaceFolder
    displayName: 'Databricks Notebooks Folder'
    type: string
    default: '/Shared'

  - name: adbNotebookMount
    displayName: 'Databricks Notebook for mounting ADLS'
    type: string
    default: 'mount-adls-gen-2'

  - name: adbNotebookPipeline
    displayName: 'Databricks Notebook used by the ADF pipeline'
    type: string
    default: 'print-current-user'

  - name: adbNsgName
    displayName: 'Azure Databricks NSG Name'
    type: string
    default: 'databricks-nsg'

  - name: adbVnetName
    displayName: 'Azure Databricks VNet Name'
    type: string
    default: 'databricks-vnet'

  - name: adbVnetCidr
    displayName: 'Cidr range for the VNet'
    type: string
    default: '10.179.0.0/16'

  - name: adbPrivateSubnetName
    displayName: 'Azure Databricks Private Subnet Name'
    type: string
    default: 'private-subnet'

  - name: adbPrivateSubnetCidr
    displayName: 'Cidr range for the Private Subnet'
    type: string
    default: '10.179.0.0/18'

  - name: adbPublicSubnetName
    displayName: 'Azure Databricks Public Subnet Name'
    type: string
    default: 'public-subnet'

  - name: adbPublicSubnetCidr
    displayName: 'Cidr range for the Public Subnet'
    type: string
    default: '10.179.64.0/18'

  - name: armTemplatesLocation
    displayName: 'Location of ARM templates'
    type: string
    default: '$(System.DefaultWorkingDirectory)/arm'

  - name: scriptsLocation
    displayName: 'Location of Scripts'
    type: string
    default: '$(System.DefaultWorkingDirectory)/scripts'

  - name: databricksUniqueId
    displayName: 'Databricks Unique Id'
    type: string
    default: '2ff814a6-3304-4ab8-85cb-cd0e6f879c1d'


jobs:
- job: deployInfrastructure
  displayName: 'Deploy Infrastructure'
  pool:
    vmImage: '${{ parameters.vmImage }}'
  steps:
  - template: 'templates/deployInfrastructureArm.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbResourceGroup: '${{ parameters.adbResourceGroup }}'
      azureLocation: '${{ parameters.azureLocation }}'
      storageAccountName: '${{ parameters.storageAccountName }}'
      keyVaultName: '${{ parameters.keyVaultName }}'
      dataFactoryName: '${{ parameters.dataFactoryName }}'
      armTemplatesLocation: '${{ parameters.armTemplatesLocation }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/deployDatabricksArm.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbResourceGroup: '${{ parameters.adbResourceGroup }}'
      azureLocation: '${{ parameters.azureLocation }}'
      adbWorkspaceName: '${{ parameters.adbWorkspaceName }}'
      adbPricingTier: '${{ parameters.adbPricingTier }}'
      adbNsgName: '${{ parameters.adbNsgName }}'
      adbVnetName: '${{ parameters.adbVnetName }}'
      adbVnetCidr: '${{ parameters.adbVnetCidr }}'
      adbPrivateSubnetName: '${{ parameters.adbPrivateSubnetName }}'
      adbPrivateSubnetCidr: '${{ parameters.adbPrivateSubnetCidr }}'
      adbPublicSubnetName: '${{ parameters.adbPublicSubnetName }}'
      adbPublicSubnetCidr: '${{ parameters.adbPublicSubnetCidr }}'
      armTemplatesLocation: '${{ parameters.armTemplatesLocation }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'


- job: deployServicePrincipal
  displayName: 'Deploy Service Principal to Workspace'
  dependsOn: 'deployInfrastructure'
  pool:
    vmImage: '${{ parameters.vmImage }}'
  steps:
  - template: 'templates/createServicePrincipal.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      spRegistrationName: '${{ parameters.spRegistrationName }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/addServicePrincipalDetailsToKeyVault.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      keyVaultName: '${{ parameters.keyVaultName }}'
      spClientId: '$(newSpClientId)'
      spObjectId: '$(newSpObjectId)'
      spClientSecret: '$(newSpClientSecret)'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/assignRolesOnStorageAccount.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      storageAccountName: '${{ parameters.storageAccountName }}'
      spObjectId: '$(newSpObjectId)'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/configureWorkspaceAccess.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbResourceGroup: '${{ parameters.adbResourceGroup }}'
      adbWorkspaceName: '${{ parameters.adbWorkspaceName }}'
      databricksUniqueId: '${{ parameters.databricksUniqueId }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/addServicePrincipalToWorkspace.yml'  # Template reference
    parameters:
      adbWorkspaceUrl: '$(adbWorkspaceUrl)'
      aadAccessToken: '$(aadAccessToken)'
      spClientId: '$(newSpClientId)'
      spRegistrationName: '${{ parameters.spRegistrationName }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/listWorkspaceUsers.yml'  # Template reference
    parameters:
      adbWorkspaceUrl: '$(adbWorkspaceUrl)'
      aadAccessToken: '$(aadAccessToken)'
      scriptsLocation: '${{ parameters.scriptsLocation }}'


- job: setupWorkspace
  displayName: 'Setup Databricks Workspace'
  dependsOn: 'deployServicePrincipal'
  pool:
    vmImage: '${{ parameters.vmImage }}'
  steps:
  - template: 'templates/configurePython.yml'  # Template reference

  - template: 'templates/configureWorkspaceAccess.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbResourceGroup: '${{ parameters.adbResourceGroup }}'
      adbWorkspaceName: '${{ parameters.adbWorkspaceName }}'
      databricksUniqueId: '${{ parameters.databricksUniqueId }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/deployNotebooksToWorkspace.yml'  # Template reference
    parameters:
      adbWorkspaceUrl: '$(adbWorkspaceUrl)'
      aadAccessToken: '$(aadAccessToken)'
      adbNotebooksSourceLocation: '${{ parameters.adbNotebooksSourceLocation }}'
      adbNotebooksWorkspaceFolder: '${{ parameters.adbNotebooksWorkspaceFolder }}'

  - template: 'templates/getServicePrincipalDetailsFromKeyVault.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      keyVaultName: '${{ parameters.keyVaultName }}'

  - template: 'templates/addServicePrincipalDetailsToSecretScope.yml'  # Template reference
    parameters:
      adbWorkspaceUrl: '$(adbWorkspaceUrl)'
      aadAccessToken: '$(aadAccessToken)'
      adbSecretScope: '${{ parameters.adbSecretScope }}'
      spClientId: '$(spClientId)'
      spClientSecret: '$(spClientSecret)'
      adbNotebooksWorkspaceFolder: '${{ parameters.adbNotebooksWorkspaceFolder }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'
  
  - template: 'templates/mountAdlsContainer.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbWorkspaceUrl: '$(adbWorkspaceUrl)'
      aadAccessToken: '$(aadAccessToken)'
      adbSecretScope: '${{ parameters.adbSecretScope }}'
      storageAccountName: '${{ parameters.storageAccountName }}'
      storageContainerName: '${{ parameters.storageContainerName }}'
      adbNotebooksWorkspaceFolder: '${{ parameters.adbNotebooksWorkspaceFolder }}'
      adbNotebookMount: '${{ parameters.adbNotebookMount }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'


- job: runPipeline
  displayName: 'Run a Data Factory Pipeline'
  dependsOn: 'setupWorkspace'
  pool:
    vmImage: '${{ parameters.vmImage }}'
  steps:
  - template: 'templates/getServicePrincipalDetailsFromKeyVault.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      keyVaultName: '${{ parameters.keyVaultName }}'

  - template: 'templates/configureWorkspaceAccess.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbResourceGroup: '${{ parameters.adbResourceGroup }}'
      adbWorkspaceName: '${{ parameters.adbWorkspaceName }}'
      databricksUniqueId: '${{ parameters.databricksUniqueId }}'
      spClientId: '$(spClientId)'
      spClientSecret: '$(spClientSecret)'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - task: AzureCLI@2
    displayName: 'Add the new SP Access Token to Key Vault'
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: 'bash'
      scriptPath: '${{ parameters.scriptsLocation }}/doAddSecretToAkv.sh'
      arguments: '"${{ parameters.keyVaultName }}" "aadAccessToken" "$(aadAccessToken)"'

  - template: 'templates/deployDataFactoryPipelineArm.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbResourceGroup: '${{ parameters.adbResourceGroup }}'
      azureLocation: '${{ parameters.azureLocation }}'
      adbWorkspaceUrl: '$(adbWorkspaceUrl)'
      keyVaultName: '${{ parameters.keyVaultName }}'
      dataFactoryName: '${{ parameters.dataFactoryName }}'
      dataFactoryPipelineName: '${{ parameters.dataFactoryPipelineName }}'
      armTemplatesLocation: '${{ parameters.armTemplatesLocation }}'
      scriptsLocation: '${{ parameters.scriptsLocation }}'

  - template: 'templates/invokeDataFactoryPipeline.yml'  # Template reference
    parameters:
      azureSubscription: '${{ parameters.azureSubscription }}'
      adbResourceGroup: '${{ parameters.adbResourceGroup }}'
      dataFactoryName: '${{ parameters.dataFactoryName }}'
      dataFactoryPipelineName: '${{ parameters.dataFactoryPipelineName }}'
      adbNotebookPipelinePath: '${{ parameters.adbNotebooksWorkspaceFolder }}/${{ parameters.adbNotebookPipeline }}'
