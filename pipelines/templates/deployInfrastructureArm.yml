# Template that deploys a basic Azure Infrastructure using ARM Templates:
# 1 - ADLS Gen 2 Storage Account
# 2 - Azure Key Vault
# 3 - Azure Data Factory
#

parameters:
- name: azureSubscription
  displayName: 'Service connection name'
  type: string

- name: adbResourceGroup
  displayName: 'Azure Databricks Resource Group Name'
  type: string

- name: azureLocation
  displayName: 'Azure Location for all resources'
  type: string

- name: storageAccountName
  displayName: 'Azure Storage Account Name'
  type: string

- name: keyVaultName
  displayName: 'Azure Key Vault Name'
  type: string

- name: dataFactoryName
  displayName: 'Azure Data Factory Name'
  type: string

- name: armTemplatesLocation
  displayName: 'Location of ARM templates'
  type: string

- name: scriptsLocation
  displayName: 'Location of Scripts'
  type: string


steps:
- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Deploy ADLS Storage Account'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '${{ parameters.azureSubscription }}'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '${{ parameters.adbResourceGroup }}'
    location: '${{ parameters.azureLocation }}'
    templateLocation: 'Linked artifact'
    csmFile: '${{ parameters.armTemplatesLocation }}/azure-adls-gen-2.json'
    overrideParameters: '-storageAccountName ${{ parameters.storageAccountName }}'
    deploymentMode: 'Incremental'
    deploymentName: '${{ parameters.storageAccountName }}'

- task: AzurePowerShell@4
  displayName: 'Get ObjectId of Azure Pipelines Principal'
  inputs:
    azureSubscription: '${{ parameters.azureSubscription }}'
    ScriptType: InlineScript
    Inline: |
      $Context = Get-AzContext
      $AzureDevOpsServicePrincipal = Get-AzADServicePrincipal -ApplicationId $Context.Account.Id
      $spObjectId = $AzureDevOpsServicePrincipal.Id
      
      Write-Host "##vso[task.setvariable variable=spObjectId;]$spObjectId"
    azurePowerShellVersion: 'LatestVersion'

- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Deploy Azure Key Vault'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '${{ parameters.azureSubscription }}'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '${{ parameters.adbResourceGroup }}'
    location: '${{ parameters.azureLocation }}'
    templateLocation: 'Linked artifact'
    csmFile: '${{ parameters.armTemplatesLocation }}/azure-key-vault.json'
    overrideParameters: '-keyVaultName ${{ parameters.keyVaultName }} -enableSoftDelete false -objectId $(spObjectId) -secretsPermissions ["all"]'
    deploymentMode: 'Incremental'
    deploymentName: '${{ parameters.keyVaultName }}'

- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Deploy Azure Data Factory'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '${{ parameters.azureSubscription }}'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '${{ parameters.adbResourceGroup }}'
    location: '${{ parameters.azureLocation }}'
    templateLocation: 'Linked artifact'
    csmFile: '${{ parameters.armTemplatesLocation }}/azure-data-factory-empty.json'
    overrideParameters: '-name ${{ parameters.dataFactoryName }}'
    deploymentMode: 'Incremental'
    deploymentName: '${{ parameters.dataFactoryName }}'

- task: AzurePowerShell@4
  displayName: 'Get ADF Managed Identity'
  inputs:
    azureSubscription: '${{ parameters.azureSubscription }}'
    ScriptPath: '${{ parameters.scriptsLocation }}/getDataFactoryIdentity.ps1'
    ScriptArguments: '''${{ parameters.adbResourceGroup }}'' ''${{ parameters.dataFactoryName }}'''
    azurePowerShellVersion: 'LatestVersion'

- task: AzureCLI@2
  displayName: 'Add ADF Identity to Key Vault policies'
  inputs:
    azureSubscription: '${{ parameters.azureSubscription }}'
    scriptType: 'bash'
    scriptPath: '${{ parameters.scriptsLocation }}/doAddPrincipalToAkvPolicies.sh'
    arguments: '"${{ parameters.keyVaultName }}" "$(adfObjectId)"'
